#include <iostream>
#include <bits/stdc++.h>
using namespace std;
bool issafe(int B[][10],int i,int j,int n){
    for(int r=0;r<n;r++){
        if(B[r][j]==1)
        return false;
    }
    int x=i;
    int y=j;
    while(x>=0 && y>=0){
        if(B[x][y]==1){
            return false;
        }
        x--;
        y--;
    }
    x=i;y=j;
    while(x>=0 && y<n){
        if(B[x][y]==1)
        return false;
        x--;
        y++;
    }
return true;
}
bool NQueen(int B[][10],int i,int n){
    if(i==n){
        cout<<"[";
        for(int j=0;j<n;j++){
            for(int k=0;k<n;k++){
                if(B[j][k]==1){
                cout<<k+1<<" ";
            }
        }
       
    }
        cout<<"] "; 
 
        return true;
    }
    for(int j=0;j<n;j++){
        if(issafe(B,i,j,n)){
            B[i][j]=1;

            bool nextQ = NQueen(B,i+1,n);
            if(nextQ){
                return true;
            }
            B[i][j]=0;
        }
    }
return false;
}
void solveNQ(int n){
      int B[10][10]={0};
  
    if (NQueen(B,0,n) == false) 
    { 
        cout<<"-1"; 
        return ; 
    } 
  
    return ; 
}
int main() {
    int n;
    cin>>n;
    solveNQ(n);
    return 0;
}
