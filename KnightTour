#include <iostream>
#include <bits/stdc++.h>
using namespace std;
bool IfValidMove(int (*)[8], int, int);
int rowPath[] = { 2, 1, -1, -2, -2, -1, 1, 2 };
int colPath[] = { 1, 2, 2, 1, -1, -2, -2, -1 };
int i,j;



bool knightTour(int visited[][8], int r, int c, int move)
{  
    if(move == 64)
    {
        for(i=0;i<8;i++)
        {
            for(j=0;j<8;j++)
            {
                cout<<visited[i][j]<<" ";
            }
            cout<<endl;
        }
        return true;
    }
    else
    {
        for(int index=0; index<8; index++) 
        {
                int newR = r + rowPath[index];
                int newC = c + colPath[index];
                if(IfValidMove(visited, newR, newC))
                {   
                    
                    move++;
                    visited[newR][newC] = move;
                    if(knightTour(visited, newR, newC, move))
                    { 
                        return true;
                    } ,
                    move--;
                    visited[newR][newC] = 0;
                    
                  }
        }
    }
    return false;
}

bool IfValidMove(int visited[][8], int newR, int newC)
{
    if((newR >= 0 && newR < 8) && (newC >= 0 && newC < 8) && (visited[newR][newC] == 0))
    return true;
return false;
}

int main() {
   int visited[8][8]={{0},{0}};
   visited[0][0] = 1;
   knightTour(visited,0,0,1);
   
	return 0;
}
