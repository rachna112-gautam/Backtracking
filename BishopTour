#include <iostream>
#include <bits/stdc++.h>
using namespace std;
bool IfValidMove(int (*)[8], int, int);
int rowPath[] = { -1, -1, 1, 1};
int colPath[] = { -1, 1, -1, 1};
int i,j;



bool bishopTour(int board[][8], int r, int c, int move)
{  
    if(move == 29)
    {
        for(i=0;i<8;i++)
        {
            for(j=0;j<8;j++)
            {   
                cout<<board[i][j]<<" ";
            }
            cout<<endl;
        }
        return true;
    }
    else
    {
        for(int index=0; index<4; index++) 
        {
                int newR = r + rowPath[index];
                int newC = c + colPath[index];
                if(IfValidMove(board, newR, newC))
                {   
                    
                    move++;
                   board[newR][newC] = move;
                    if(bishopTour(board, newR, newC, move))
                    { 
                        return true;
                    } 
                    move--;
                   
                    board[newR][newC] = 0;
                    
                  }
        }
    }
    return false;
}

bool IfValidMove(int board[][8], int newR, int newC)
{
    if((newR >= 0 && newR < 8) && (newC >= 0 && newC < 8) && (board[newR][newC] == 0))
    return true;
return false;
}

int main() {
   int board[8][8]={{0},{0}};
   board[5][3] = 1;
   bishopTour(board,5,3,1);
   
	return 0;
}
